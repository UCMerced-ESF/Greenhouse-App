{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/Greenhouse-app/src/components/apiAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiAuth = () => {\n  _s();\n  const [authData, setAuthData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = '/api/auth/jwt/login';\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Accept: 'application/json'\n        },\n        body: new URLSearchParams({\n          grant_type: '',\n          username: 'smanjrekar2@ucmerced.edu',\n          password: 'ucm5730*',\n          scope: '',\n          client_id: '',\n          client_secret: ''\n        })\n      };\n      try {\n        const response = await fetch(url, options);\n        const data = await response.json(); // Assuming the API returns JSON\n        setAuthData(data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), authData ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(authData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiAuth, \"ryK+WVMeFcgkj0quVLUzYln6Hn0=\");\n_c = ApiAuth;\nexport default ApiAuth;\nvar _c;\n$RefreshReg$(_c, \"ApiAuth\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ApiAuth","_s","authData","setAuthData","error","setError","fetchData","url","options","method","headers","Accept","body","URLSearchParams","grant_type","username","password","scope","client_id","client_secret","response","fetch","data","json","children","message","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/sam/Desktop/Greenhouse-app/src/components/apiAuth.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n \nconst ApiAuth = () => {\n  const [authData, setAuthData] = useState(null);\n  const [error, setError] = useState(null);\n \n  useEffect(() => {\n    const fetchData = async () => {\n      const url = '/api/auth/jwt/login';\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Accept: 'application/json'\n        },\n        body: new URLSearchParams({\n          grant_type: '',\n          username: 'smanjrekar2@ucmerced.edu',\n          password: 'ucm5730*',\n          scope: '',\n          client_id: '',\n          client_secret: ''\n        })\n      };\n \n      try {\n        const response = await fetch(url, options);\n        const data = await response.json(); // Assuming the API returns JSON\n        setAuthData(data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n \n    fetchData();\n  }, []);\n \n  return (\n    <div>\n      {error && <p>Error: {error.message}</p>}\n      {authData ? <pre>{JSON.stringify(authData, null, 2)}</pre> : <p>Loading...</p>}\n    </div>\n  );\n};\n \nexport default ApiAuth;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,GAAG,GAAG,qBAAqB;MACjC,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,mCAAmC;UACnDC,MAAM,EAAE;QACV,CAAC;QACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;UACxBC,UAAU,EAAE,EAAE;UACdC,QAAQ,EAAE,0BAA0B;UACpCC,QAAQ,EAAE,UAAU;UACpBC,KAAK,EAAE,EAAE;UACTC,SAAS,EAAE,EAAE;UACbC,aAAa,EAAE;QACjB,CAAC;MACH,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,EAAEC,OAAO,CAAC;QAC1C,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCpB,WAAW,CAACmB,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAyB,QAAA,GACGpB,KAAK,iBAAIL,OAAA;MAAAyB,QAAA,GAAG,SAAO,EAACpB,KAAK,CAACqB,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtC3B,QAAQ,gBAAGH,OAAA;MAAAyB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAAC7B,QAAQ,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAAG9B,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAzCID,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}