{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/Greenhouse-app/src/components/nav.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ReactComponent as Logo } from './ucm_logo.svg'; // Adjust the path if the SVG is in a different directory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Nav = ({\n  onNavigationClick\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  //   const onNavigationClick = (section) => {\n  //     console.log(`Navigating to ${section}`);\n  //     // Add your navigation logic here\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    id: \"top\",\n    style: navbarStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#top\",\n      style: ucmLogo,\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDropdown,\n        style: {\n          padding: '10px',\n          cursor: 'pointer'\n        },\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          backgroundColor: 'white',\n          border: '1px solid black',\n          zIndex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          style: linkStyle,\n          onClick: () => onNavigationClick('status'),\n          href: \"#top\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          style: linkStyle,\n          onClick: () => onNavigationClick('requestForm'),\n          href: \"#top\",\n          children: \"Request Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 14\n  }, this);\n};\n\n// Define styles\n_s(Nav, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Nav;\nconst navbarStyle = {\n  justifycontents: 'center',\n  backgroundColor: '#003262',\n  height: '80px',\n  // Set the desired height of the navbar\n  padding: '0 20px' // Add padding if needed\n};\nconst ucmLogo = {\n  width: '50px',\n  // Adjust the width to make the logo smaller\n  height: 'auto',\n  // Keep the aspect ratio\n  marginRight: '20px' // Add some space after the logo\n};\nconst linkStyle = {\n  color: 'white',\n  // Change color to white for better visibility\n  padding: '15px 20px',\n  textDecoration: 'none',\n  fontSize: '18px' // Example font size\n};\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","ReactComponent","Logo","jsxDEV","_jsxDEV","Nav","onNavigationClick","_s","isOpen","setIsOpen","toggleDropdown","id","style","navbarStyle","children","href","ucmLogo","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","cursor","position","backgroundColor","border","zIndex","linkStyle","_c","justifycontents","height","width","marginRight","color","textDecoration","fontSize","$RefreshReg$"],"sources":["/Users/sam/Desktop/Greenhouse-app/src/components/nav.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { ReactComponent as Logo } from './ucm_logo.svg';  // Adjust the path if the SVG is in a different directory\nconst Nav = ({ onNavigationClick }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n//   const onNavigationClick = (section) => {\n//     console.log(`Navigating to ${section}`);\n//     // Add your navigation logic here\n//   };\n\n    return (\n           \n\n             <nav id=\"top\" style={navbarStyle}>\n                <a href=\"#top\" style={ucmLogo}>\n                        <Logo/>\n                    </a>                \n\n                    <div>\n      <button onClick={toggleDropdown} style={{ padding: '10px', cursor: 'pointer' }}>\n        Menu\n      </button>\n      {isOpen && (\n        <div style={{ position: 'absolute', backgroundColor: 'white', border: '1px solid black', zIndex: 1 }}>\n          <a style={linkStyle} onClick={() => onNavigationClick('status')} href=\"#top\">Status</a>\n          <a style={linkStyle} onClick={() => onNavigationClick('requestForm')} href=\"#top\">Request Form</a>\n        </div>\n      )}\n    </div>\n            </nav>\n    \n    );\n}\n\n// Define styles\nconst navbarStyle = {\n    justifycontents: 'center',\n    backgroundColor: '#003262',\n    height: '80px',  // Set the desired height of the navbar\n    padding: '0 20px',  // Add padding if needed\n};\n\nconst ucmLogo = {\n    width: '50px',  // Adjust the width to make the logo smaller\n    height: 'auto', // Keep the aspect ratio\n    marginRight: '20px',  // Add some space after the logo\n};\n\nconst linkStyle = {\n    color: 'white',  // Change color to white for better visibility\n    padding: '15px 20px',\n    textDecoration: 'none',\n    fontSize: '18px',  // Example font size\n};\n\nexport default Nav;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}