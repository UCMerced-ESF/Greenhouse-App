{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/Greenhouse-app/src/components/apiFormData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FarmFormData = () => {\n  _s();\n  // const [formData, setFormData] = useState(null);\n  const [error, setError] = useState(null);\n  const [authToken, setAuthToken] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const apiUrl = 'https://ucmerced.terrantic.net/f/Green%20House%20Space%20Request';\n  const fetchToken = async e => {\n    e.preventDefault();\n    setError(null);\n    const url = '/auth/jwt/login';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json'\n      },\n      body: new URLSearchParams({\n        grant_type: '',\n        username: username,\n        password: password,\n        scope: '',\n        client_id: '',\n        client_secret: ''\n      })\n    };\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.text();\n      setAuthToken(data);\n      setIsAuthenticated(true);\n      console.log(\"Auth successful:\", data);\n    } catch (error) {\n      setError(error);\n      console.error(\"Error fetching token:\", error);\n    }\n  };\n  const fetchFormData = useCallback(async () => {\n    if (!authToken) return;\n    setError(null);\n    const url = '/datasets/table/query/select?query=select+*+from+postgresql%28pg_data%2C+table%3D%22tabGreen+House+Space+Request%22%2C+schema%3D%22forms%22%29';\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: authToken\n      },\n      body: JSON.stringify({}) // Adjust this line if body should not be undefined\n    };\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const jsonData = await response.json();\n      setFormData(jsonData);\n      console.log(\"Form data fetched:\", jsonData);\n    } catch (fetchError) {\n      setError(fetchError);\n      console.error(\"Error fetching form data:\", fetchError);\n    }\n  }, [authToken]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchFormData();\n    }\n  }, [isAuthenticated, fetchFormData]);\n  const handleLogout = () => {\n    setAuthToken(null);\n    setIsAuthenticated(false);\n    setFormData(null);\n    setUsername('');\n    setPassword('');\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: fetchToken,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"Requests\",\n      width: \"100%\",\n      height: \"500px\",\n      src: apiUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(FarmFormData, \"y0WMTV9zkXtBYoi3LDxgs3ghbl4=\");\n_c = FarmFormData;\nexport default FarmFormData;\nvar _c;\n$RefreshReg$(_c, \"FarmFormData\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","FarmFormData","_s","error","setError","authToken","setAuthToken","username","setUsername","password","setPassword","isAuthenticated","setIsAuthenticated","apiUrl","fetchToken","e","preventDefault","url","options","method","headers","Accept","body","URLSearchParams","grant_type","scope","client_id","client_secret","response","fetch","ok","Error","status","data","text","console","log","fetchFormData","Authorization","JSON","stringify","jsonData","json","setFormData","fetchError","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","style","color","message","title","width","height","src","onClick","_c","$RefreshReg$"],"sources":["/Users/sam/Desktop/Greenhouse-app/src/components/apiFormData.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nconst FarmFormData = () => {\n  // const [formData, setFormData] = useState(null);\n  const [error, setError] = useState(null);\n  const [authToken, setAuthToken] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const apiUrl = 'https://ucmerced.terrantic.net/f/Green%20House%20Space%20Request';\n\n  const fetchToken = async (e) => {\n    e.preventDefault();\n    setError(null);\n    const url = '/auth/jwt/login';\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Accept: 'application/json'\n      },\n      body: new URLSearchParams({\n        grant_type: '',\n        username: username,\n        password: password,\n        scope: '',\n        client_id: '',\n        client_secret: ''\n      })\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.text();\n      setAuthToken(data);\n      setIsAuthenticated(true);\n      console.log(\"Auth successful:\", data);\n    } catch (error) {\n      setError(error);\n      console.error(\"Error fetching token:\", error);\n    }\n  };\n\n  const fetchFormData = useCallback(async () => {\n    if (!authToken) return;\n    setError(null);\n    const url = '/datasets/table/query/select?query=select+*+from+postgresql%28pg_data%2C+table%3D%22tabGreen+House+Space+Request%22%2C+schema%3D%22forms%22%29';\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: authToken,\n      },\n      body: JSON.stringify({}), // Adjust this line if body should not be undefined\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const jsonData = await response.json();\n      setFormData(jsonData);\n      console.log(\"Form data fetched:\", jsonData);\n    } catch (fetchError) {\n      setError(fetchError);\n      console.error(\"Error fetching form data:\", fetchError);\n    }\n  }, [authToken]);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchFormData();\n    }\n  }, [isAuthenticated, fetchFormData]);\n\n  const handleLogout = () => {\n    setAuthToken(null);\n    setIsAuthenticated(false);\n    setFormData(null);\n    setUsername('');\n    setPassword('');\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div>\n        <h2>Login</h2>\n        <form onSubmit={fetchToken}>\n          <div>\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\">Login</button>\n        </form>\n        {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* <h2>Form Data</h2>\n      {error && <p style={{ color: \"red\" }}>{error.message}</p>}\n      {formData ? (\n        <pre>{JSON.stringify(formData, null, 2)}</pre>\n      ) : (\n        <p>Loading form data...</p>\n      )} */}\n\n      {/* iframe filler */}\n      <h2>Requests</h2>\n\n      <iframe\n                title=\"Requests\"\n                width=\"100%\"\n                height=\"500px\"\n                src={apiUrl}\n            ></iframe>\n      <button onClick={handleLogout}>Logout</button>\n    </div>\n  );\n};\n\nexport default FarmFormData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}