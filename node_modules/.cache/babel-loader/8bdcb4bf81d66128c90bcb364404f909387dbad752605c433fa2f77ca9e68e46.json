{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n\n// const FarmFormData = () => {\n//   const [formData, setFormData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [authToken, setauthToken] = useState(null);\n\n//   useEffect(() => {\n//     const fetchToken = async () => {\n//       const url = '/api/auth/jwt/login';\n//       const options = {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/x-www-form-urlencoded',\n//           Accept: 'application/json'\n//         },\n//         body: new URLSearchParams({\n//           grant_type: '',\n//           username: process.env.USERNAME,\n//           password: process.env.PASSWORD,\n//           scope: '',\n//           client_id: '',\n//           client_secret: ''\n//         })\n//       };\n\n//       try {\n//         const response = await fetch(url, options);\n//         const data = await response.json();\n//         setauthToken(data);\n//         console.log(data);\n//       } catch (error) {\n//       }\n//     };\n\n//     fetchToken();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchFormData = async () => {\n//       const url =\n//         \"/api/datasets/table/query/select?query=select+*+from+postgresql%28pg_data%2C+table%3D%22tabGreen+House+Space+Request%22%2C+schema%3D%22forms%22%29\";\n//       const options = {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Accept: \"application/json\",\n//           Authorization: authToken,\n//         },\n//         body: undefined,\n//       };\n\n//       try {\n//         const response = await fetch(url, options);\n//         const contentType = response.headers.get(\"content-type\");\n//         if (contentType && contentType.includes(\"application/json\")) {\n//           const jsonData = await response.json();\n//           setFormData(jsonData);\n//           console.log(jsonData);\n//         } else {\n//           const text = await response.text();\n//           console.error(\"Expected JSON, got:\", text);\n//           setError(new Error(\"Received non-JSON response\"));\n//         }\n//       } catch (fetchError) {\n//         setError(fetchError);\n//       }\n//     };\n//     fetchFormData();\n//   }, [authToken]);\n\n//   return (\n//     <div>\n//       {error ? (\n//         <p style={{ color: \"red\" }}>{error.message}</p>\n//       ) : (\n//         <pre>{formData ? JSON.stringify(formData, null, 2) : \"Loading...\"}</pre>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FarmFormData;","map":{"version":3,"names":[],"sources":["/Users/sam/Desktop/Greenhouse-app/src/components/apiFormData.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n\n// const FarmFormData = () => {\n//   const [formData, setFormData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [authToken, setauthToken] = useState(null);\n\n//   useEffect(() => {\n//     const fetchToken = async () => {\n//       const url = '/api/auth/jwt/login';\n//       const options = {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/x-www-form-urlencoded',\n//           Accept: 'application/json'\n//         },\n//         body: new URLSearchParams({\n//           grant_type: '',\n//           username: process.env.USERNAME,\n//           password: process.env.PASSWORD,\n//           scope: '',\n//           client_id: '',\n//           client_secret: ''\n//         })\n//       };\n\n//       try {\n//         const response = await fetch(url, options);\n//         const data = await response.json();\n//         setauthToken(data);\n//         console.log(data);\n//       } catch (error) {\n//       }\n//     };\n\n//     fetchToken();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchFormData = async () => {\n//       const url =\n//         \"/api/datasets/table/query/select?query=select+*+from+postgresql%28pg_data%2C+table%3D%22tabGreen+House+Space+Request%22%2C+schema%3D%22forms%22%29\";\n//       const options = {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Accept: \"application/json\",\n//           Authorization: authToken,\n//         },\n//         body: undefined,\n//       };\n\n//       try {\n//         const response = await fetch(url, options);\n//         const contentType = response.headers.get(\"content-type\");\n//         if (contentType && contentType.includes(\"application/json\")) {\n//           const jsonData = await response.json();\n//           setFormData(jsonData);\n//           console.log(jsonData);\n//         } else {\n//           const text = await response.text();\n//           console.error(\"Expected JSON, got:\", text);\n//           setError(new Error(\"Received non-JSON response\"));\n//         }\n//       } catch (fetchError) {\n//         setError(fetchError);\n//       }\n//     };\n//     fetchFormData();\n//   }, [authToken]);\n\n//   return (\n//     <div>\n//       {error ? (\n//         <p style={{ color: \"red\" }}>{error.message}</p>\n//       ) : (\n//         <pre>{formData ? JSON.stringify(formData, null, 2) : \"Loading...\"}</pre>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default FarmFormData;\n"],"mappings":"AAAA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}